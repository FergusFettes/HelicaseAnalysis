function DataHarvestEdit(~,~,AssertMain,AssertAll)
global t; global analysis; global e;
structureFields={'Force',...
        'HeightBp',...
        'VelocityBpUp',...
        'VelocityBpDown',...
        'Rate',...
        'Height',...
        'DistanceFromSlide',...
        'Duration',...
        'VelocityUp',...
        'VelocityDown',...
        'BpConversion',...
        'FitParameters',...
        'FileTime',...
        'ExactTime',...
        'Protein0',...
        'Protein0Conc',...
        'Protein1',...
        'Protein1Conc',...
        'Protein2',...
        'Protein2Conc',...
        'Protein3',...
        'Protein3Conc',...
        'Protein4',...
        'Protein4Conc',...
        'Protein5',...
        'Protein5Conc',...
        'BufferType',...
        'ATP'};
    
  	if AssertMain
        if AssertAll
            selection = 1:length(e);
        else %if assert all fails, we want to take the selection
            selection = analysis.MainBeadList.Value;
        end
    else %if assert main fails (ie if we want the potentials)
        if AssertAll
            selection = 1:length(t);
        else
            selection=analysis.NewBeadList.Value;
        end
    end
    field=structureFields{analysis.EditSelection.Value};
    content = analysis.EditContent.String;
    
    if ~isempty(str2num(content)); content = str2num(content); end
    
    if AssertMain
        for i = selection   
        e(i).(field) = content;
        end
    else
        for i = selection   
        t(i).(field) = content;
        end;
    end
    
end % add entries to selected data
